'use client';

import { Card, CardContent } from '@/components/ui/card';
import { Switch } from '@/components/ui/switch';
import { Button } from '@/components/ui/button';
import { FunnelFilesManager } from './FunnelFilesManager';

interface GeneralSettings {
  cookieSettings: {
    strictlyNecessary1: boolean;
    functionalCookies1: boolean;
    strictlyNecessary2: boolean;
    functionalCookies2: boolean;
    strictlyNecessary3: boolean;
    functionalCookies3: boolean;
    functionalCookies4: boolean;
    contextMemory: boolean;
    dataCollection: boolean;
    stopAgentAfterManager: boolean;
    agentKnowledgeBase: boolean;
    voiceRequests: boolean;
  };
}

interface GeneralSettingsProps {
  generalSettings: GeneralSettings;
  onSettingChange: (key: string, value: boolean) => void;
  onSave: () => void;
  backendOrgId?: string;
  funnelId?: string | number;
}

export function GeneralSettingsComponent({
  generalSettings,
  onSettingChange,
  onSave,
  backendOrgId,
  funnelId
}: GeneralSettingsProps) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –∞–≥–µ–Ω—Ç–∞
  const isKnowledgeBaseEnabled =
    generalSettings.cookieSettings.agentKnowledgeBase;

  // –û—Ç–ª–∞–¥–∫–∞
  console.log('GeneralSettings Debug:', {
    isKnowledgeBaseEnabled,
    backendOrgId,
    funnelId,
    cookieSettings: generalSettings.cookieSettings
  });
  const cookieOptions = [
    {
      key: 'contextMemory',
      title: '–ü–∞–º—è—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞',
      description:
        '–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –¥–µ–π—Å—Ç–≤–∏—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å —Å–∞–π—Ç–æ–º.',
      enabled: true
    },
    {
      key: 'dataCollection',
      title: '–°–±–æ—Ä –º–∞—Å—Å–∏–≤–∞ –¥–∞–Ω–Ω—ã—Ö',
      description:
        '–ü–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–±–∏—Ä–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≤–µ–¥–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ —É–ª—É—á—à–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞.',
      enabled: false
    },
    {
      key: 'stopAgentAfterManager',
      title: '–ü–∞—É–∑–∞ –ø–æ—Å–ª–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞',
      description:
        '–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É —Ä–∞–±–æ—Ç—ã —á–∞—Ç-–∞–≥–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞.',
      enabled: true
    },
    {
      key: 'agentKnowledgeBase',
      title: '–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –∞–≥–µ–Ω—Ç–∞',
      description:
        '–î–∞—ë—Ç –∞–≥–µ–Ω—Ç—É –¥–æ—Å—Ç—É–ø –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ç–æ—á–Ω—ã—Ö –∏ –ø–æ–ª–µ–∑–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.',
      enabled: true
    },
    {
      key: 'voiceRequests',
      title: '–ì–æ–ª–æ—Å–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã',
      description:
        '–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.',
      enabled: false
    }
  ];

  return (
    <>
      <Card className='h-fit'>
        {/* <CardHeader>
          <CardTitle>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–∞</CardTitle>
          <p className='text-muted-foreground text-sm'>
            –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∏ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥ —Å–≤–æ–∏ –∑–∞–¥–∞—á–∏ –≤ —ç—Ç–æ–º –º–µ–Ω—é –∞–≥–µ–Ω—Ç–∞
          </p>
        </CardHeader> */}
        <CardContent className='space-y-4'>
          <div className='space-y-3'>
            {cookieOptions.map((setting) => (
              <div
                key={setting.key}
                className='flex items-center justify-between gap-4'
              >
                <div className='flex-1'>
                  <h4 className='text-sm font-medium'>{setting.title}</h4>
                  <p className='text-muted-foreground text-xs'>
                    {setting.description}
                  </p>
                </div>
                <Switch
                  checked={
                    generalSettings.cookieSettings[
                      setting.key as keyof typeof generalSettings.cookieSettings
                    ]
                  }
                  onCheckedChange={(checked) =>
                    onSettingChange(setting.key, checked)
                  }
                />
              </div>
            ))}
          </div>

          <Button onClick={onSave} className='w-full'>
            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±—â–µ–Ω–∏—è
          </Button>
        </CardContent>
      </Card>

      {/* –í—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —Ñ–∞–π–ª–æ–≤ */}
      <div className='mt-6 bg-blue-500 p-2 text-center font-bold text-white'>
        üîµ –ü–ï–†–ï–î –†–ï–ù–î–ï–†–û–ú FunnelFilesManager
      </div>

      <FunnelFilesManager
        backendOrgId={backendOrgId || ''}
        funnelId={funnelId || ''}
        isKnowledgeBaseEnabled={isKnowledgeBaseEnabled}
      />

      <div className='mt-6 bg-purple-500 p-2 text-center font-bold text-white'>
        üü£ –ü–û–°–õ–ï –†–ï–ù–î–ï–†–ê FunnelFilesManager
      </div>
    </>
  );
}
